# storage-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-storage-deployment
  namespace: {{ include "storage.namespace" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: storage
  template:
    metadata:
      labels:
        app: storage
    spec:
      containers:
        - name: storage-service
          image: {{ .Values.storageService.image }}:{{ .Values.storageService.tag }}
          ports:
            - containerPort: {{ .Values.storageService.service.port }}
          imagePullPolicy: Always
          env:
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: db_name
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: db_username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: db_password
            - name: DB_HOST
              value: {{ .Values.dbHOST }}
            - name: DB_PORT
              value: "{{ .Values.dbPORT }}"
          resources:  
            requests:
              memory: "128Mi"
              cpu: "200m"
            limits:
              memory: "256Mi"
              cpu: "300m"
          livenessProbe:
            httpGet:
              path: /healthz  
              port: {{ .Values.storageService.service.port }}
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /ready  
              port: {{ .Values.storageService.service.port }}
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          securityContext:
            runAsUser: 1000