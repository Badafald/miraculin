{{- range $key, $svc := .Values.services }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $svc.name }}-service
  namespace: {{ include "miraculin.namespace" $ }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ $svc.name }}-service
  template:
    metadata:
      labels:
        app: {{ $svc.name }}-service
    spec:
      containers:
        - name: {{ $svc.name }}-service
          image: {{ $.Values.repo }}-{{ $svc.name }}:{{ $svc.version }}
          ports:
            - containerPort: {{ $svc.targetPort }}
          imagePullPolicy: Always
          env:
          {{- if eq $svc.name "web" }}
            - name: ENCRYPTION_SERVICE_URL
              value: {{ $svc.dependencies.ENCRYPTION_SERVICE_URL }}
            - name: STORAGE_SERVICE_URL
              value: {{ $svc.dependencies.STORAGE_SERVICE_URL }}
          {{- end }}
          {{- if eq $svc.name "storage" }}
{{ include "miraculin.storageSecrets" $ | indent 12 }}
            - name: DB_HOST
              value: "{{ ternary $.Values.db.prod.host $.Values.db.test.host $.Values.setEnvVar.prod }}"
            - name: DB_PORT
              value: "{{ ternary $.Values.db.prod.port $.Values.db.test.port $.Values.setEnvVar.prod }}"
          {{- end }}
          resources:
            requests:
              cpu: {{ $svc.resources.requests.cpu }}
              memory: {{ $svc.resources.requests.memory }}
            limits:
              cpu: {{ $svc.resources.limits.cpu }}
              memory: {{ $svc.resources.limits.memory }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ $svc.targetPort }}
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /ready
              port: {{ $svc.targetPort }}
            initialDelaySeconds: 5
            periodSeconds: 10
          securityContext:
            runAsUser: 1000
{{- end }}
